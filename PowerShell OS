Link to Student Guide https://os.cybbh.io/public/os/latest/index.html
I am stack # 14 for OS (if stack gets messed up # may get changed)
Stack # 14 IP is 10.50.22.230

Challenges Info
-------------------------------------------------------------------------------------
http://10.50.22.197:8000/
username: GAHA-M-502
password: password
--------------------------------------------------------------------------------------
Anything inside the ( ) is a powershell command
--------------------------------------------------------------------------------------
Windows Persistance Mechanisims

Powershell Profiles:           
        ____________________________________                                   
	| Most impactful is AllUsersAllHosts|
	| 2nd is AllUsersAllcurrentsHosts   |	
	| 3rd is currentUserAllHosts 	    |________________
	| 4th is currentUsercurrentHost     |		     |
	____________________________________		     v this can be changed for the others above
	
	A way to check for them is (test-path -path $profile.currentUsercurrentHost) this returns a boolean statment	
	If it returns true that means there is a configured profile 
	Using ($profile | Get-Member -Type NoteProperty | ft -wrap) displays profile Names, MemberType, and Paths

	Run Keys: check the HKCU for things hidden in Run and RunOnce

	Services : 
		They can be used to establish things like back doors because some services are run automaticlly on start up

	


--------------------------------------------------------------------------------------
Linux Persistance Mechanisims

--------------------------------------------------------------------------------------
Basic Powershell Concepts:

  Powershell version command (pwsh)
  
	To start a transcript (start-transcript) shows every command and everyout put of the shell you are transcribing 
  	use (stop-transcript) to end the transcribing.

	(Get-Process | Get-Member | Where-Object {$_.Membertype -match "Method"})      
	# Displays all objects with Method in their name from the results from Get-Member of the Get-Process cmdlet
	 
	While using multiple boxes use (whoami) to confirm you are on the correct machine

	Using DOT notain you can do something like ((get-process).name) to see all the names of the processes running on the machine
	
	Using ((Get-Process calculator*).kill()) is an example of using the .kill() method to stop a process

	The $_. pipeline varible iterates through each object from the previously piped command 
	((Get-Process | Select-Object Name, ID, path | Where-object {$_.ID -lt '1000'}).count)
	Shows the count of all the processes with a PID lower than 1000 

	-ErrorAction SilentlyContinue is used to hide any errors and continue

Using CIM classes:

	Using the CIM classes pulls physical information from the machine such as hardrives and BIOS

	to list all the CIM classes do (Get-Cimclass *)

	to get BIOS information (get-ciminstance -class win32_bios)
	
	
